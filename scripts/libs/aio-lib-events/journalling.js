"use strict";const helpers=require("./helpers").exportFunctions,DEFAULT_INTERVAL=2e3,Rx=require("rxjs");class EventsConsumerFromJournal extends Rx.Subject{constructor(t,e,s,i){super(),this.ioEvents=t,this.journalUrl=helpers.appendQueryParams(e,s),this.nextLink=this.journalUrl,this.interval=i&&i.interval,this.subject=new Rx.Subject,this.timeout=setTimeout((()=>this.__checkPollingCondition()),0,this)}__checkPollingCondition(){this.subject.observers.length>0?setTimeout((()=>this.poll()),0,this):setTimeout((()=>this.__checkPollingCondition()),2e3,this)}subscribe(t){return this.subject.subscribe(t)}poll(){this.ioEvents.getEventsFromJournal(this.nextLink).then((t=>{this.nextLink=t&&t.link.next;let e=0;if(t&&t.events)for(const e of t.events)this.subject.next(e);else e=this.interval||t&&t.retryAfter||2e3;this.timeout=e,setTimeout((()=>this.__checkPollingCondition()),this.timeout,this)})).catch((t=>{this.subject.error(t),setTimeout((()=>this.__checkPollingCondition()),2e3,this)}))}}module.exports=EventsConsumerFromJournal;