"use strict";const helpers=require("./helpers").exportFunctions,signatureUtils=require("../src/signatureUtils").exportFunctions,loggerNamespace="@adobe/aio-lib-events",logger=require("@adobe/aio-lib-core-logging")(loggerNamespace,{level:process.env.LOG_LEVEL}),{codes}=require("./SDKErrors"),{HttpExponentialBackoff,parseRetryAfterHeader}=require("@adobe/aio-lib-core-networking"),fetchRetryClient=new HttpExponentialBackoff,{DEFAULT_ENV,getCliEnv}=require("@adobe/aio-lib-env"),EventsConsumerFromJournal=require("./journalling"),EVENTS_BASE_URL={prod:"https://api.adobe.io",stage:"https://api-stage.adobe.io"},EVENTS_INGRESS_URL={prod:"https://eventsingress.adobe.io",stage:"https://eventsingress-stage.adobe.io"},APPLICATION_HAL_JSON="application/hal+json";function init(e,t,s,r){return new Promise(((i,n)=>{const a=new EventsCoreAPI,o=getCliEnv();a.init(e,t,s,o,r).then((e=>{logger.debug("sdk initialized successfully"),i(e)})).catch((e=>{logger.debug(`sdk init error: ${e}`),n(e)}))}))}class EventsCoreAPI{async init(e,t,s,r,i){const n=[];if(e||n.push("organizationId"),t||n.push("apiKey"),s||n.push("accessToken"),n.length){const r={organizationId:e,apiKey:t,accessToken:s};throw new codes.ERROR_SDK_INITIALIZATION({sdkDetails:r,messageValues:`${n.join(", ")}`})}return this.httpOptions=i,this.organizationId=e,this.apiKey=t,this.accessToken=s,this.__initLibURLs(r),this}getAllProviders(e,t={}){const s={};s.Accept=APPLICATION_HAL_JSON;const r=t.filterBy;if(r&&r.providerMetadataIds&&r.providerMetadataId)return Promise.reject(new codes.ERROR_GET_ALL_PROVIDERS({messageValues:"Only one of providerMetadataIds or providerMetadataId can be set"}));const i=this.__createRequest("GET",s),n=this.__getUrl(`/events/${e}/providers`);let a=helpers.appendQueryParams(n,r);a=helpers.appendQueryParams(a,{eventmetadata:t.fetchEventMetadata});const o={requestOptions:i,url:a};return this.__handleRequest(o,codes.ERROR_GET_ALL_PROVIDERS)}getProvider(e,t=!1){const s={};s.Accept=APPLICATION_HAL_JSON;const r=this.__createRequest("GET",s),i=this.__getUrl(`/events/providers/${e}`),n={requestOptions:r,url:helpers.appendQueryParams(i,{eventmetadata:t})};return this.__handleRequest(n,codes.ERROR_GET_PROVIDER)}createProvider(e,t,s,r){const i={};i.Accept=APPLICATION_HAL_JSON;const n={requestOptions:this.__createRequest("POST",i,JSON.stringify(r)),url:this.__getUrl(`/events/${e}/${t}/${s}/providers`)};return this.__handleRequest(n,codes.ERROR_CREATE_PROVIDER)}updateProvider(e,t,s,r,i){const n={};n.Accept=APPLICATION_HAL_JSON;const a={requestOptions:this.__createRequest("PUT",n,JSON.stringify(i)),url:this.__getUrl(`/events/${e}/${t}/${s}/providers/${r}`)};return this.__handleRequest(a,codes.ERROR_UPDATE_PROVIDER)}deleteProvider(e,t,s,r){const i={requestOptions:this.__createRequest("DELETE",{}),url:this.__getUrl(`/events/${e}/${t}/${s}/providers/${r}`)};return this.__handleRequest(i,codes.ERROR_DELETE_PROVIDER)}getProviderMetadata(){const e={};e.Accept=APPLICATION_HAL_JSON;const t={requestOptions:this.__createRequest("GET",e),url:this.__getUrl("/events/providermetadata")};return this.__handleRequest(t,codes.ERROR_GET_ALL_PROVIDER_METADATA)}getAllEventMetadataForProvider(e){const t={};t.Accept=APPLICATION_HAL_JSON;const s={requestOptions:this.__createRequest("GET",t),url:this.__getUrl(`/events/providers/${e}/eventmetadata`)};return this.__handleRequest(s,codes.ERROR_GET_ALL_EVENTMETADATA)}getEventMetadataForProvider(e,t){const s={};s.Accept=APPLICATION_HAL_JSON;const r={requestOptions:this.__createRequest("GET",s),url:this.__getUrl(`/events/providers/${e}/eventmetadata/${t}`)};return this.__handleRequest(r,codes.ERROR_GET_EVENTMETADATA)}createEventMetadataForProvider(e,t,s,r,i){const n={};n.Accept=APPLICATION_HAL_JSON;const a={requestOptions:this.__createRequest("POST",n,JSON.stringify(i)),url:this.__getUrl(`/events/${e}/${t}/${s}/providers/${r}/eventmetadata`)};return this.__handleRequest(a,codes.ERROR_CREATE_EVENTMETADATA)}updateEventMetadataForProvider(e,t,s,r,i,n){const a={};a.Accept=APPLICATION_HAL_JSON;const o={requestOptions:this.__createRequest("PUT",a,JSON.stringify(n)),url:this.__getUrl(`/events/${e}/${t}/${s}/providers/${r}/eventmetadata/${i}`)};return this.__handleRequest(o,codes.ERROR_UPDATE_EVENTMETADATA)}deleteEventMetadata(e,t,s,r,i){const n={requestOptions:this.__createRequest("DELETE",{}),url:this.__getUrl(`/events/${e}/${t}/${s}/providers/${r}/eventmetadata/${i}`)};return this.__handleRequest(n,codes.ERROR_DELETE_EVENTMETADATA)}deleteAllEventMetadata(e,t,s,r){const i={requestOptions:this.__createRequest("DELETE",{}),url:this.__getUrl(`/events/${e}/${t}/${s}/providers/${r}/eventmetadata`)};return this.__handleRequest(i,codes.ERROR_DELETE_ALL_EVENTMETADATA)}createRegistration(e,t,s,r){const i={};i.Accept=APPLICATION_HAL_JSON;const n={requestOptions:this.__createRequest("POST",i,JSON.stringify(r)),url:this.__getUrl(`/events/${e}/${t}/${s}/registrations`)};return this.__handleRequest(n,codes.ERROR_CREATE_REGISTRATION)}updateRegistration(e,t,s,r,i){const n={};n.Accept=APPLICATION_HAL_JSON;const a={requestOptions:this.__createRequest("PUT",n,JSON.stringify(i)),url:this.__getUrl(`/events/${e}/${t}/${s}/registrations/${r}`)};return this.__handleRequest(a,codes.ERROR_UPDATE_REGISTRATION)}getRegistration(e,t,s,r){const i={};i.Accept=APPLICATION_HAL_JSON;const n={requestOptions:this.__createRequest("GET",i),url:this.__getUrl(`/events/${e}/${t}/${s}/registrations/${r}`)};return this.__handleRequest(n,codes.ERROR_GET_REGISTRATION)}getAllRegistrationsForWorkspace(e,t,s){const r={};r.Accept=APPLICATION_HAL_JSON;const i={requestOptions:this.__createRequest("GET",r),url:this.__getUrl(`/events/${e}/${t}/${s}/registrations`)};return this.__handleRequest(i,codes.ERROR_GET_ALL_REGISTRATION)}getAllRegistrationsForOrg(e,t={}){const s={};s.Accept=APPLICATION_HAL_JSON;const r=this.__createRequest("GET",s),i=this.__getUrl(`/events/${e}/registrations`),n={requestOptions:r,url:helpers.appendQueryParams(i,t)};return this.__handleRequest(n,codes.ERROR_GET_ALL_REGISTRATIONS_FOR_ORG)}deleteRegistration(e,t,s,r){const i={requestOptions:this.__createRequest("DELETE",{}),url:this.__getUrl(`/events/${e}/${t}/${s}/registrations/${r}`)};return this.__handleRequest(i,codes.ERROR_DELETE_REGISTRATION)}publishEvent(e){const t=this.__createRequest("POST",{"Content-Type":"application/cloudevents+json"},JSON.stringify(e)),s=this.httpOptions&&this.httpOptions.retries||0,r=this.httpOptions.eventsIngressURL,i={requestOptions:t,url:r};return new Promise(((e,n)=>{fetchRetryClient.exponentialBackoff(r,t,{maxRetries:s,initialDelayInMillis:1e3},this.__getRetryOn(s)).then((t=>{if(!t.ok)throw i.requestId=t.headers.get("x-request-id"),Error(helpers.reduceError(t));200===t.status?e(t.text()):e()})).catch((e=>{this.__maskAuthData(i),n(new codes.ERROR_PUBLISH_EVENT({sdkDetails:i,messageValues:e}))}))}))}async getEventsFromJournal(e,t,s){const r=helpers.appendQueryParams(e,t),i=this.__createRequest("GET",{}),n={requestOptions:i,url:r},a=this.httpOptions&&this.httpOptions.retries||0,o=await fetchRetryClient.exponentialBackoff(r,i,{maxRetries:a,initialDelayInMillis:1e3},this.__getRetryOn(a));if(200===o.status||204===o.status){const t=await(200===o.status?o.json():{}),r=Object.assign({},t),i=o.headers.get("link"),n=o.headers.get("retry-after");return i&&(r.link=helpers.parseLinkHeader(e,i)),n&&(r.retryAfter=parseRetryAfterHeader(n)||void 0),s&&(r.responseHeaders=o.headers.raw()),new Promise(((e,t)=>{e(r)}))}return new Promise(((e,t)=>{this.__maskAuthData(n),t(new codes.ERROR_GET_JOURNAL_DATA({sdkDetails:n,messageValues:new Error(`get journal events failed with ${o.status} ${o.statusText}`)}))}))}getEventsObservableFromJournal(e,t,s){return new EventsConsumerFromJournal(this,e,t,s).asObservable()}async verifyDigitalSignatureForEvent(e,t,s){const r=helpers.getProperPayload(e),i=JSON.parse(r);if(signatureUtils.isTargetRecipient(i,t))return await signatureUtils.verifyDigitalSignature(s,t,r);{const e="Unable to authenticate, not a valid target recipient";return helpers.genErrorResponse(401,e)}}__getRetryOn(e){return function(t,s,r){if(t<e&&(null!==s||429===r.status||r.status>499&&r.status<600)){const e=`Retrying after attempt ${t+1}. failed: ${s||r.statusText}`;return logger.debug(e),!0}return!1}}__handleRequest(e,t){return new Promise(((s,r)=>{fetchRetryClient.exponentialBackoff(e.url,e.requestOptions,{maxRetries:this.httpOptions&&this.httpOptions.retries||0,initialDelayInMillis:1e3}).then((t=>{if(!t.ok)throw e.requestId=t.headers.get("x-request-id"),409===t.status&&(e.conflictingId=t.headers.get("x-conflicting-id")),Error(helpers.reduceError(t));204===t.status?s():s(t.json())})).catch((s=>{this.__maskAuthData(e),r(new t({sdkDetails:e,messageValues:s}))}))}))}__createRequest(e,t,s){return{method:e,headers:this.__setHeaders(t),body:s,timeout:this.httpOptions&&this.httpOptions.timeout}}__maskAuthData(e){e.requestOptions.headers.Authorization="***",e.requestOptions.headers["x-api-key"]="***"}__setHeaders(e){return e["x-ims-org-id"]||(e["x-ims-org-id"]=this.organizationId),e["x-api-key"]||(e["x-api-key"]=this.apiKey),e.Authorization||(e.Authorization="Bearer "+this.accessToken),e["Content-Type"]||(e["Content-Type"]="application/json"),e}__getUrl(e){return this.httpOptions.eventsBaseURL+e}__initLibURLs(e){this.httpOptions=this.httpOptions||{};let t=EVENTS_BASE_URL[e];t||(t=EVENTS_BASE_URL[DEFAULT_ENV],e=DEFAULT_ENV);const s=EVENTS_INGRESS_URL[e];this.httpOptions.eventsBaseURL=this.httpOptions.eventsBaseURL||t,this.httpOptions.eventsIngressURL=this.httpOptions.eventsIngressURL||s}}module.exports={init};