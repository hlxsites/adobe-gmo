{"version":3,"file":"index.production.js","sources":["../../src/addHighlightedAttribute.ts","../../src/constants.ts","../../src/getLocalStorage.ts","../../src/getTemplates.tsx","../../src/createRecentSearchesPlugin.ts","../../src/createStorageApi.ts","../../../autocomplete-shared/dist/esm/createRef.js","../../src/search.ts","../../src/createLocalStorageRecentSearchesPlugin.ts","../../src/createLocalStorage.ts"],"sourcesContent":["import { Highlighted, HistoryItem } from './types';\n\ntype HighlightParams<TItem> = {\n  item: TItem;\n  query: string;\n};\n\nexport function addHighlightedAttribute<TItem extends HistoryItem>({\n  item,\n  query,\n}: HighlightParams<TItem>): Highlighted<TItem> {\n  return {\n    ...item,\n    _highlightResult: {\n      label: {\n        value: query\n          ? item.label.replace(\n              new RegExp(query.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'gi'),\n              (match) => {\n                return `__aa-highlight__${match}__/aa-highlight__`;\n              }\n            )\n          : item.label,\n      },\n    },\n  };\n}\n","export const LOCAL_STORAGE_KEY = 'AUTOCOMPLETE_RECENT_SEARCHES';\nexport const LOCAL_STORAGE_KEY_TEST =\n  '__AUTOCOMPLETE_RECENT_SEARCHES_PLUGIN_TEST_KEY__';\n","import { LOCAL_STORAGE_KEY_TEST } from './constants';\n\nfunction isLocalStorageSupported() {\n  try {\n    localStorage.setItem(LOCAL_STORAGE_KEY_TEST, '');\n    localStorage.removeItem(LOCAL_STORAGE_KEY_TEST);\n\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\ntype LocalStorageProps = {\n  key: string;\n};\n\nexport function getLocalStorage<TItem>({ key }: LocalStorageProps) {\n  if (!isLocalStorageSupported()) {\n    return {\n      setItem() {},\n      getItem() {\n        return [];\n      },\n    };\n  }\n\n  return {\n    setItem(items: TItem[]) {\n      return window.localStorage.setItem(key, JSON.stringify(items));\n    },\n    getItem(): TItem[] {\n      const items = window.localStorage.getItem(key);\n\n      return items ? (JSON.parse(items) as TItem[]) : [];\n    },\n  };\n}\n","/** @jsxRuntime classic */\n/** @jsx createElement */\nimport { SourceTemplates } from '@algolia/autocomplete-js';\n\nimport { RecentSearchesItem } from './types';\n\nexport type GetTemplatesParams<TItem extends RecentSearchesItem> = {\n  onRemove(id: string): void;\n  onTapAhead(item: TItem): void;\n};\n\nexport function getTemplates<TItem extends RecentSearchesItem>({\n  onRemove,\n  onTapAhead,\n}: GetTemplatesParams<TItem>): SourceTemplates<TItem> {\n  return {\n    item({ item, createElement, components }) {\n      return (\n        <div className=\"aa-ItemWrapper\">\n          <div className=\"aa-ItemContent\">\n            <div className=\"aa-ItemIcon aa-ItemIcon--noBorder\">\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M12.516 6.984v5.25l4.5 2.672-0.75 1.266-5.25-3.188v-6h1.5zM12 20.016q3.281 0 5.648-2.367t2.367-5.648-2.367-5.648-5.648-2.367-5.648 2.367-2.367 5.648 2.367 5.648 5.648 2.367zM12 2.016q4.125 0 7.055 2.93t2.93 7.055-2.93 7.055-7.055 2.93-7.055-2.93-2.93-7.055 2.93-7.055 7.055-2.93z\" />\n              </svg>\n            </div>\n            <div className=\"aa-ItemContentBody\">\n              <div className=\"aa-ItemContentTitle\">\n                <components.ReverseHighlight hit={item} attribute=\"label\" />\n                {item.category && (\n                  <span className=\"aa-ItemContentSubtitle aa-ItemContentSubtitle--inline\">\n                    <span className=\"aa-ItemContentSubtitleIcon\" /> in{' '}\n                    <span className=\"aa-ItemContentSubtitleCategory\">\n                      {item.category}\n                    </span>\n                  </span>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"aa-ItemActions\">\n            <button\n              className=\"aa-ItemActionButton\"\n              title=\"Remove this search\"\n              onClick={(event) => {\n                event.preventDefault();\n                event.stopPropagation();\n                onRemove(item.id);\n              }}\n            >\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M18 7v13c0 0.276-0.111 0.525-0.293 0.707s-0.431 0.293-0.707 0.293h-10c-0.276 0-0.525-0.111-0.707-0.293s-0.293-0.431-0.293-0.707v-13zM17 5v-1c0-0.828-0.337-1.58-0.879-2.121s-1.293-0.879-2.121-0.879h-4c-0.828 0-1.58 0.337-2.121 0.879s-0.879 1.293-0.879 2.121v1h-4c-0.552 0-1 0.448-1 1s0.448 1 1 1h1v13c0 0.828 0.337 1.58 0.879 2.121s1.293 0.879 2.121 0.879h10c0.828 0 1.58-0.337 2.121-0.879s0.879-1.293 0.879-2.121v-13h1c0.552 0 1-0.448 1-1s-0.448-1-1-1zM9 5v-1c0-0.276 0.111-0.525 0.293-0.707s0.431-0.293 0.707-0.293h4c0.276 0 0.525 0.111 0.707 0.293s0.293 0.431 0.293 0.707v1zM9 11v6c0 0.552 0.448 1 1 1s1-0.448 1-1v-6c0-0.552-0.448-1-1-1s-1 0.448-1 1zM13 11v6c0 0.552 0.448 1 1 1s1-0.448 1-1v-6c0-0.552-0.448-1-1-1s-1 0.448-1 1z\" />\n              </svg>\n            </button>\n            <button\n              className=\"aa-ItemActionButton\"\n              title={`Fill query with \"${item.label}\"`}\n              onClick={(event) => {\n                event.preventDefault();\n                event.stopPropagation();\n                onTapAhead(item);\n              }}\n            >\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M8 17v-7.586l8.293 8.293c0.391 0.391 1.024 0.391 1.414 0s0.391-1.024 0-1.414l-8.293-8.293h7.586c0.552 0 1-0.448 1-1s-0.448-1-1-1h-10c-0.552 0-1 0.448-1 1v10c0 0.552 0.448 1 1 1s1-0.448 1-1z\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      );\n    },\n  };\n}\n","import { PluginSubscribeParams } from '@algolia/autocomplete-core';\nimport {\n  AutocompleteSource,\n  AutocompleteState,\n  AutocompletePlugin,\n} from '@algolia/autocomplete-js';\nimport { createRef, MaybePromise, warn } from '@algolia/autocomplete-shared';\nimport { SearchOptions } from '@algolia/client-search';\n\nimport { createStorageApi } from './createStorageApi';\nimport { getTemplates } from './getTemplates';\nimport { RecentSearchesItem, Storage, StorageApi } from './types';\n\nexport interface RecentSearchesPluginData<TItem extends RecentSearchesItem>\n  extends StorageApi<TItem> {\n  /**\n   * Optimized [Algolia search parameters](https://www.algolia.com/doc/api-reference/search-api-parameters/). This is useful when using the plugin along with the [Query Suggestions](createQuerySuggestionsPlugin) plugin.\n   *\n   * This function enhances the provided search parameters by:\n   * - Excluding Query Suggestions that are already displayed in recent searches.\n   * - Using a shared `hitsPerPage` value to get a group limit of Query Suggestions and recent searches.\n   * @link https://www.algolia.com/doc/ui-libraries/autocomplete/api-reference/autocomplete-plugin-recent-searches/createLocalStorageRecentSearchesPlugin/#param-getalgoliasearchparams\n   */\n  getAlgoliaSearchParams(params?: SearchOptions): SearchOptions;\n}\n\nexport type CreateRecentSearchesPluginParams<TItem extends RecentSearchesItem> =\n  {\n    /**\n     * The storage to fetch from and save recent searches into.\n     *\n     * @link https://www.algolia.com/doc/ui-libraries/autocomplete/api-reference/autocomplete-plugin-recent-searches/createRecentSearchesPlugin/#param-storage\n     */\n    storage: Storage<TItem>;\n    /**\n     * A function to transform the provided source.\n     *\n     * @link https://www.algolia.com/doc/ui-libraries/autocomplete/api-reference/autocomplete-plugin-recent-searches/createRecentSearchesPlugin/#param-transformsource\n     */\n    transformSource?(params: {\n      source: AutocompleteSource<TItem>;\n      state: AutocompleteState<TItem>;\n      onRemove(id: string): void;\n      onTapAhead(item: TItem): void;\n    }): AutocompleteSource<TItem>;\n    subscribe?(params: PluginSubscribeParams<TItem>): void;\n  };\n\nfunction getDefaultSubscribe<TItem extends RecentSearchesItem>(\n  store: StorageApi<TItem>\n) {\n  return function subscribe({ onSelect }: PluginSubscribeParams<TItem>) {\n    onSelect(({ item, state, source }) => {\n      const inputValue = source.getItemInputValue({ item, state });\n\n      if (source.sourceId === 'querySuggestionsPlugin' && inputValue) {\n        const recentItem: RecentSearchesItem = {\n          id: inputValue,\n          label: inputValue,\n          category: (item as any).__autocomplete_qsCategory,\n        };\n        store.addItem(recentItem as TItem);\n      }\n    });\n  };\n}\n\nexport function createRecentSearchesPlugin<TItem extends RecentSearchesItem>(\n  options: CreateRecentSearchesPluginParams<TItem>\n): AutocompletePlugin<TItem, RecentSearchesPluginData<TItem>> {\n  const { storage, transformSource, subscribe } = getOptions(options);\n  const store = createStorageApi<TItem>(storage);\n  const lastItemsRef = createRef<MaybePromise<TItem[]>>([]);\n\n  return {\n    name: 'aa.recentSearchesPlugin',\n    subscribe: subscribe ?? getDefaultSubscribe(store),\n    onSubmit({ state }) {\n      const { query } = state;\n\n      if (query) {\n        const recentItem: RecentSearchesItem = {\n          id: query,\n          label: query,\n        };\n        store.addItem(recentItem as TItem);\n      }\n    },\n    getSources({ query, setQuery, refresh, state }) {\n      lastItemsRef.current = store.getAll(query);\n\n      function onRemove(id: string) {\n        store.removeItem(id);\n        refresh();\n      }\n\n      function onTapAhead(item: TItem) {\n        setQuery(item.label);\n        refresh();\n      }\n\n      return Promise.resolve(lastItemsRef.current).then((items) => {\n        if (items.length === 0) {\n          return [];\n        }\n\n        return [\n          transformSource({\n            source: {\n              sourceId: 'recentSearchesPlugin',\n              getItemInputValue({ item }) {\n                return item.label;\n              },\n              getItems() {\n                return items;\n              },\n              templates: getTemplates({ onRemove, onTapAhead }),\n            },\n            onRemove,\n            onTapAhead,\n            state: state as AutocompleteState<TItem>,\n          }),\n        ];\n      });\n    },\n    data: {\n      ...store,\n      // @ts-ignore SearchOptions `facetFilters` is ReadonlyArray\n      getAlgoliaSearchParams(params = {}) {\n        // If the items returned by `store.getAll` are contained in a Promise,\n        // we cannot provide the search params in time when this function is called\n        // because we need to resolve the promise before getting the value.\n        if (!Array.isArray(lastItemsRef.current)) {\n          warn(\n            false,\n            'The `getAlgoliaSearchParams` function is not supported with storages that return promises in `getAll`.'\n          );\n          return params;\n        }\n\n        return {\n          ...params,\n          facetFilters: [\n            ...(params.facetFilters ?? []),\n            // @TODO: we need to base the filter on the `query` attribute, not\n            // `objectID`, because the Query Suggestions index cannot ensure\n            // that the `objectID` will always be equal to the query.\n            ...lastItemsRef.current.map((item) => [`objectID:-${item.label}`]),\n          ],\n          hitsPerPage: Math.max(\n            1,\n            (params.hitsPerPage ?? 10) - lastItemsRef.current.length\n          ),\n        };\n      },\n    },\n    __autocomplete_pluginOptions: options,\n  };\n}\n\nfunction getOptions<TItem extends RecentSearchesItem>(\n  options: CreateRecentSearchesPluginParams<TItem>\n) {\n  return {\n    transformSource: ({ source }) => source,\n    ...options,\n  };\n}\n","import { HistoryItem, Storage, StorageApi } from './types';\n\nexport function createStorageApi<TItem extends HistoryItem>(\n  storage: Storage<TItem>\n): StorageApi<TItem> {\n  return {\n    addItem(item) {\n      storage.onRemove(item.id);\n      storage.onAdd(item);\n    },\n    removeItem(id) {\n      storage.onRemove(id);\n    },\n    getAll(query) {\n      return storage.getAll(query);\n    },\n  };\n}\n","export function createRef(initialValue) {\n  return {\n    current: initialValue\n  };\n}","import { addHighlightedAttribute } from './addHighlightedAttribute';\nimport { Highlighted, RecentSearchesItem } from './types';\n\nexport type SearchParams<TItem extends RecentSearchesItem> = {\n  query: string;\n  items: TItem[];\n  limit: number;\n};\n\nexport function search<TItem extends RecentSearchesItem>({\n  query,\n  items,\n  limit,\n}: SearchParams<TItem>): Array<Highlighted<TItem>> {\n  if (!query) {\n    return items\n      .slice(0, limit)\n      .map((item) => addHighlightedAttribute({ item, query }));\n  }\n\n  return items\n    .filter((item) => item.label.toLowerCase().includes(query.toLowerCase()))\n    .slice(0, limit)\n    .map((item) => addHighlightedAttribute({ item, query }));\n}\n","import { AutocompletePlugin } from '@algolia/autocomplete-js';\n\nimport { LOCAL_STORAGE_KEY } from './constants';\nimport { createLocalStorage } from './createLocalStorage';\nimport {\n  createRecentSearchesPlugin,\n  CreateRecentSearchesPluginParams,\n  RecentSearchesPluginData,\n} from './createRecentSearchesPlugin';\nimport { search as defaultSearch, SearchParams } from './search';\nimport { Highlighted, RecentSearchesItem } from './types';\n\nexport type CreateRecentSearchesLocalStorageOptions<\n  TItem extends RecentSearchesItem\n> = {\n  /**\n   * A local storage key to identify where to save and retrieve the recent searches.\n   *\n   * For example:\n   * - \"navbar\"\n   * - \"search\"\n   * - \"main\"\n   *\n   * The plugin namespaces all keys to avoid collisions.\n   *\n   * @example \"top_searchbar\"\n   * @link https://www.algolia.com/doc/ui-libraries/autocomplete/api-reference/autocomplete-plugin-recent-searches/createLocalStorageRecentSearchesPlugin/#param-key\n   */\n  key: string;\n\n  /**\n   * The number of recent searches to display.\n   *\n   * @default 5\n   * @link https://www.algolia.com/doc/ui-libraries/autocomplete/api-reference/autocomplete-plugin-recent-searches/createLocalStorageRecentSearchesPlugin/#param-limit\n   */\n  limit?: number;\n\n  /**\n   * A search function to retrieve recent searches from.\n   *\n   * This function is called in [`storage.getAll`](https://www.algolia.com/doc/ui-libraries/autocomplete/api-reference/autocomplete-plugin-recent-searches/createRecentSearchesPlugin/#param-storage) to retrieve recent searches and is useful to filter and highlight recent searches when typing a query.\n   *\n   * @link https://www.algolia.com/doc/ui-libraries/autocomplete/api-reference/autocomplete-plugin-recent-searches/createLocalStorageRecentSearchesPlugin/#param-search\n   */\n  search?(params: SearchParams<TItem>): Array<Highlighted<TItem>>;\n};\n\ntype LocalStorageRecentSearchesPluginOptions<TItem extends RecentSearchesItem> =\n  Pick<\n    CreateRecentSearchesPluginParams<TItem>,\n    'transformSource' | 'subscribe'\n  > &\n    CreateRecentSearchesLocalStorageOptions<TItem>;\n\nexport function createLocalStorageRecentSearchesPlugin<\n  TItem extends RecentSearchesItem\n>(\n  options: LocalStorageRecentSearchesPluginOptions<TItem>\n): AutocompletePlugin<TItem, RecentSearchesPluginData<TItem>> {\n  const { key, limit, transformSource, search, subscribe } =\n    getOptions(options);\n  const storage = createLocalStorage<TItem>({\n    key: [LOCAL_STORAGE_KEY, key].join(':'),\n    limit,\n    search,\n  });\n\n  const recentSearchesPlugin = createRecentSearchesPlugin<TItem>({\n    transformSource,\n    storage,\n    subscribe,\n  });\n\n  return {\n    ...recentSearchesPlugin,\n    name: 'aa.localStorageRecentSearchesPlugin',\n    __autocomplete_pluginOptions: options,\n  };\n}\n\nfunction getOptions<TItem extends RecentSearchesItem>(\n  options: LocalStorageRecentSearchesPluginOptions<TItem>\n) {\n  return {\n    limit: 5,\n    search: defaultSearch,\n    transformSource: ({ source }) => source,\n    ...options,\n  };\n}\n","import { CreateRecentSearchesLocalStorageOptions } from './createLocalStorageRecentSearchesPlugin';\nimport { getLocalStorage } from './getLocalStorage';\nimport { HistoryItem, Storage } from './types';\n\nexport type CreateLocalStorageProps<TItem extends HistoryItem> = Required<\n  CreateRecentSearchesLocalStorageOptions<TItem>\n>;\n\nexport function createLocalStorage<TItem extends HistoryItem>({\n  key,\n  limit,\n  search,\n}: CreateLocalStorageProps<TItem>): Storage<TItem> {\n  const storage = getLocalStorage<TItem>({ key });\n\n  return {\n    onAdd(item) {\n      storage.setItem([item, ...storage.getItem()]);\n    },\n    onRemove(id) {\n      storage.setItem(storage.getItem().filter((x) => x.id !== id));\n    },\n    getAll(query = '') {\n      return search({ query, items: storage.getItem(), limit }).slice(0, limit);\n    },\n  };\n}\n"],"names":["addHighlightedAttribute","_ref","item","query","_objectSpread","_highlightResult","label","value","replace","RegExp","match","concat","LOCAL_STORAGE_KEY","LOCAL_STORAGE_KEY_TEST","getLocalStorage","key","localStorage","setItem","removeItem","error","isLocalStorageSupported","items","window","JSON","stringify","getItem","parse","getTemplates","onRemove","onTapAhead","_ref2","createElement","components","className","viewBox","fill","d","ReverseHighlight","hit","attribute","category","title","onClick","event","preventDefault","stopPropagation","id","getDefaultSubscribe","store","onSelect","state","source","inputValue","getItemInputValue","sourceId","recentItem","__autocomplete_qsCategory","addItem","createRecentSearchesPlugin","options","_getOptions","transformSource","_ref6","getOptions","storage","subscribe","onAdd","getAll","createStorageApi","lastItemsRef","current","name","onSubmit","_ref3","getSources","_ref4","setQuery","refresh","Promise","resolve","then","length","_ref5","getItems","templates","data","getAlgoliaSearchParams","_params$facetFilters","_params$hitsPerPage","params","arguments","undefined","Array","isArray","facetFilters","_toConsumableArray","map","hitsPerPage","Math","max","__autocomplete_pluginOptions","search","limit","filter","toLowerCase","includes","slice","defaultSearch","x","createLocalStorage","join"],"mappings":"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"}